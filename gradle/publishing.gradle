/*
 *    Copyright 2019 the original author or authors.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    group = "build"
    archiveClassifier.set("sources")
    from(sourceSets.main.allSource) {
        include("**/api/**.java")
    }
    dependsOn(tasks.named("classes"))
}

task javadocJar(type: Jar) {
    group = "build"
    archiveClassifier.set("javadoc")
    def javadoc = tasks.getByName("javadoc") as Javadoc
    from(javadoc.destinationDir)
    dependsOn(javadoc)
}

task groovydocJar(type: Jar) {
    group = "build"
    archiveClassifier.set("groovydoc")
    def groovydoc = tasks.getByName("groovydoc") as Groovydoc
    from(groovydoc.destinationDir)
    dependsOn(groovydoc)
}

publishing {
    repositories {
        maven {
            name = "BuildDir"
            url = uri(rootProject.file("build/repo"))
        }
    }
    publications.withType(MavenPublication).all {
        artifact(tasks.getByName("groovydocJar"))
        artifact(tasks.getByName("javadocJar"))
        artifact(tasks.getByName("sourcesJar"))

        if (name != "pluginMaven") {
            artifact(tasks.getByName("jar"))
        }
    }

}

apply plugin: "com.github.breadmoirai.github-release"

githubRelease {
    if (project.hasProperty('github.publish.token')) {
        token getProperty('github.publish.token')
    }
    repo project.name
    draft true
    prerelease true
    releaseAssets jar, sourcesJar, javadocJar, groovydocJar
    body "Incontributing release."
}

/*
Usage:

// register any publication to publish to maven repository
publishing {
    publications {
        lib(MavenPublication)
    }
}

// set repo name and release note to publish to github releases
githubRelease {
    repo 'name'
    body "Incontributing release."
}
 */