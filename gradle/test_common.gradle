/*
 * Copyright 2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// If tests failed, the generated files were not deleted. So clean before tests.
tasks.withType(Test) {
    doFirst {
        // If tests failed in previous building, the generated files were not deleted. So clean before tests.
        file("build/tmp/testfiles").deleteDir()
    }
}


// test coverage

apply plugin: 'jacoco'

// overall task to publish to codecov
if (project == rootProject) {
    apply plugin: 'java'
    task codeCoverageReport(type: JacocoReport) {
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        subprojects.each {
            sourceSets it.sourceSets.main
        }

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled false
            csv.enabled false
        }
    }

    codeCoverageReport.dependsOn {
        subprojects*.test
    }
} else {
    tasks.withType(JacocoReport) { task ->
        afterEvaluate {
            reports {
                xml.enabled true
                html.enabled false
            }
            check.dependsOn task
        }
    }
}